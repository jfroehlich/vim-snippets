clearsnippets

# Variables & properties

snippet var "simple variable declaration"
var ${1:name} = $2${3:;}$0
endsnippet

snippet : "key:value"
${1:key}: ${2:"${3:value}"}${4:, }
endsnippet

snippet obj "object variable" b
var ${1:obj} = {
	$0
};
endsnippet

# Functions & methods

snippet fn "function declaration"
function ($1) {
	${2:// body...}
}$0
endsnippet

snippet fn "function declaration" !b
function ${1:name}($2) {
	${3:// body...}
}$0
endsnippet

snippet :fn "object method"
${1:method_name}: function (${2:attribute}) {
	${3:// body...}
}${10:,}
$0
endsnippet

snippet fe "function expression" b
(function (${1:window}${2:, undefined}) {
	${3:// body...}$0
}($1));
endsnippet

snippet proto "member function"
${1:class_name}.prototype.${2:method_name} = function(${3:first_argument}) {
	${4:// body...}
};
$0
endsnippet

snippet ext "prototypical extension" i
${1:MyObject}.prototype = new ${2:OtherObject}()${3:;}$0
endsnippet

# loops

snippet for "for loop over lists" b
for (${2:var i = 0, len = ${1:list}.lenght; i < len; i++}) {
	$3
}
$0
endsnippet

snippet forin "for loop over objects" b
for (var ${1:key} in ${2:obj}) {
	if ($2.hasOwnProperty($1)) {
		${3:// do something...}
	}
}
$0
endsnippet

snippet while "while loop" b
while (${1:i}${2:--}) {
	$3
}
$0
endsnippet

# comparators

snippet ?: "Ternary operator" b
var $1 = ${2:(${3:question})} ? ${4:true} : ${5:false};
endsnippet

snippet if "if comparator"
if ($1) {
	$2
} $4
$0
endsnippet

snippet else "else comparator"
else {
	$1
}$2
$0
endsnippet


